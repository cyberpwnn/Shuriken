buildscript {
    dependencies {
        classpath 'org.hibernate.build.gradle:gradle-maven-publish-auth:2.0.1'
        classpath 'net.linguica.gradle:maven-settings-plugin:0.5'
    }

    repositories {
        maven {
            url = "http://repo.volmit.com/repository/volmit/"
        }
        mavenLocal()
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'maven-publish'
    id "org.datlowe.maven-publish-auth" version "2.0.2"
    id 'net.linguica.maven-settings' version '0.5'
    id "com.github.johnrengelman.shadow" version "6.1.0" apply false
}

String jettyVersion = '9.4.28.v20200408';
boolean deploying = false;
group 'ninja.bytecode.shuriken'
version '2.1.19'
apply plugin: 'java-library'

allprojects {
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

subprojects {
    group rootProject.group
    version rootProject.version
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'maven-publish-auth'

    if(project.name == 'bukkit')
    {
        apply plugin: 'com.github.johnrengelman.shadow'
        String archiveName = "Shuriken.jar"
        String archivePath = jar.archiveFile.get().getAsFile().getParentFile().getAbsolutePath()
        String archiveFilePath = "C:\\Users\\cyberpwn\\Documents\\development\\server\\plugins" + "\\" + archiveName

        task buildAPIPlugin {
            group 'shuriken'
            dependsOn 'shadowJar'
        }

        shadowJar {
            zip64 true
            project.configurations.implementation.canBeResolved = true
            project.configurations.runtime.canBeResolved = true
            project.configurations.api.canBeResolved = true
            project.configurations.compile.canBeResolved = true
            archiveFileName = archiveFilePath
            dependencies {
                exclude(dependency {
                    it.moduleGroup == 'org.bukkit.craftbukkit'
                })
            }
        }
    }

    if(project.name == 'raspberry')
    {
        apply plugin: 'com.github.johnrengelman.shadow'
        String archiveName = "ShurikenRaspberry.jar"
        String archivePath = jar.archiveFile.get().getAsFile().getParentFile().getAbsolutePath() + "\\" + archiveName;

        task buildAPIPlugin {
            group 'shuriken'
            dependsOn 'shadowJar'
        }

        shadowJar {
            zip64 true
            project.configurations.implementation.canBeResolved = true
            project.configurations.runtime.canBeResolved = true
            project.configurations.api.canBeResolved = true
            project.configurations.compile.canBeResolved = true
            archiveFileName = archivePath
        }
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url = "http://repo.volmit.com/repository/volmit/"
        }
    }

    mavenSettings {
        userSettingsFileName = "C:Users/cyberpwn/Documents/development/maven/conf/settings.xml"
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok:1.18.16'
        annotationProcessor 'org.projectlombok:lombok:1.18.16'
        api 'com.google.code.gson:gson:2.8.6'
        api 'org.mongodb:bson:4.1.1'
        api 'com.github.ben-manes.caffeine:caffeine:2.8.5'
    }

    javadoc {
        if(JavaVersion.current().isJava9Compatible()) {
            options.addBooleanOption('html5', true)
        }
    }

    java {
        withJavadocJar()
        withSourcesJar()
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId = project.group
                artifactId = "shuriken-" + project.name
                version = project.version
                from components.java
            }
        }
        repositories {
            maven {
                name "volmit"
                url = "http://repo.volmit.com/repository/volmit/"
            }
        }
    }

    task predeploy {
        doLast {
            deploying = true;
        }
    }

    publishAllPublicationsToVolmitRepository.dependsOn predeploy;

    task deployAll {
        group 'shuriken'
        dependsOn publishAllPublicationsToVolmitRepository

        doLast {
            deploying = false;
        }
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url = "http://repo.volmit.com/repository/volmit/"
    }
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.16'
    annotationProcessor 'org.projectlombok:lombok:1.18.16'
}

project(":bukkit") {
    dependencies {
        if(deploying)
        {
            compile 'ninja.bytecode.shuriken:shuriken-core:' + project.version
        }

        else
        {
            compile project(":core")
        }

        api 'org.spigotmc:spigot-api:1.16.4-R0.1-SNAPSHOT'
        api 'com.destroystokyo.paper:paper-api:1.16.4-R0.1-SNAPSHOT'
        implementation 'org.dom4j:dom4j:2.1.3'
        implementation 'org.bukkit.craftbukkit:1.16.4:1.16.4'
    }
}

project(":cloud") {
    dependencies {
        if(deploying)
        {
            compile 'ninja.bytecode.shuriken:shuriken-core:' + project.version
        }

        else
        {
            compile project(":core")
        }

        implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.327')
        implementation 'com.amazonaws:aws-java-sdk-s3'
    }
}

project(":raspberry") {
    dependencies {
        if(deploying)
        {
            compile 'ninja.bytecode.shuriken:shuriken-core:' + project.version
            compile 'ninja.bytecode.shuriken:shuriken-web:' + project.version
        }

        else
        {
            compile project(":core")
            compile project(":web")
        }

        implementation 'com.pi4j:pi4j-core:1.2'
        implementation 'uk.co.caprica:picam:2.0.2'
    }
}

project(":mail") {
    dependencies {
        if(deploying)
        {
            compile 'ninja.bytecode.shuriken:shuriken-core:' + project.version
        }

        else
        {
            compile project(":core")
        }

        implementation 'javax.mail:javax.mail-api:1.6.0'
        implementation 'com.sun.mail:javax.mail:1.6.0'
        implementation 'javax.activation:activation:1.1.1'
    }
}

project(":sql") {
    dependencies {
        if(deploying)
        {
            compile 'ninja.bytecode.shuriken:shuriken-core:' + project.version
        }

        else
        {
            compile project(":core")
        }

        implementation 'mysql:mysql-connector-java:8.0.17'
    }
}

project(":web") {
    dependencies {
        if(deploying)
        {
            compile 'ninja.bytecode.shuriken:shuriken-core:' + project.version
        }

        else
        {
            compile project(":core")
        }

        implementation 'org.eclipse.jetty:jetty-server:' + jettyVersion;
        implementation 'org.eclipse.jetty:jetty-servlet:' + jettyVersion;
        implementation 'org.eclipse.jetty:jetty-webapp:' + jettyVersion;
    }
}